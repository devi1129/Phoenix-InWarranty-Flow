name: Postman Collection Workflow

on:
  push:
    branches: [main] # triggers when there is push to main branch
  workflow_dispatch: # can be executed manually
 # schedule:
   # - cron: '30 02 * * *'  # 8:00 AM IST everyday
   # - cron: '30 13 * * *'  # 7:30 PM IST everyday
   # - cron: '00 06 * * 1-5' # 11:30 AM IST Monday to Friday

jobs:
  run-tests:
    runs-on: ubuntu-latest # virtual machine where tests execute

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Newman and HTML extra reporter globally
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run the Postman collection with Newman
        run: |
          newman run "In warranty -flow Collection Copy.postman_collection.json" \
          -e QA.postman_environment.json \
          -d testdata.csv \
          -r cli,htmlextra \
          --reporter-htmlextra-export ./newman/index.html

      - name: Upload Newman HTML report as artifact
        if: always() # ensure upload runs even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: Newman-Report
          path: newman/*.html

      - name: Deploy Newman HTML report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: newman/

      - name: Send email notification
        if: always()  # ensure email is sent even if tests fail
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Phoenix In-Warranty Flow Test Execution Notification
          to: ${{ secrets.EMAIL_USERNAME_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            Hi,
            
            Phoenix In-Warranty Flow tests have been executed.
            The report has been published and is available at:  
             https://devi1129.github.io/Phoenix-InWarranty-Flow/
